@using Microsoft.AspNetCore.Identity
@using BankApp.Persistence.Identity
@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@if (signInManager.IsSignedIn(User))
{

    <nav>
        <div class="nav-wrapper teal">
            <a asp-action="index" asp-controller="home" class="brand-logo ml20">SBS Bank</a>
            <a href="#" data-target="mobile-demo" class="sidenav-trigger"><i class="material-icons">menu</i></a>

            <ul class="right hide-on-med-and-down">
                @if ((await AuthorizationService.AuthorizeAsync(User, "Admin")).Succeeded)
                {
                    <li><a class="" asp-controller="Account" asp-action="Register">Register employee</a></li>
                    <li><a class="" asp-controller="Account" asp-action="ManageUsers">Manage Users</a></li>
                }
                @if ((await AuthorizationService.AuthorizeAsync(User, "Cashier")).Succeeded)
                {
                    <li><a asp-route="customer_create">Create customer</a></li>
                    <li><a asp-action="Index" asp-controller="Home">Home</a></li>
                }
                @if (@signInManager.IsSignedIn(User))
                {
                    <li class="nav-item"><a class="">@User.Identity.Name</a></li>
                    <li>
                        <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" style="margin-right: 1rem;">
                            <button class="waves-effect waves-light btn teal lighten-2" type="submit">Log out</button>
                        </form>
                    </li>
                }
            </ul>
        </div>
    </nav>

    <ul class="sidenav" id="mobile-demo">
        @if ((await AuthorizationService.AuthorizeAsync(User, "Admin")).Succeeded)
        {
            <li><a class="" asp-controller="Account" asp-action="Register">Register</a></li>
            <li><a class="" asp-controller="Account" asp-action="ManageUsers">Manage Users</a></li>
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, "Cashier")).Succeeded)
        {
            <li><a asp-route="customer_create">Create customer</a></li>
            <li><a asp-action="Index" asp-controller="Home">Home</a></li>
        }
        @if (@signInManager.IsSignedIn(User))
        {
            <li class="nav-item"><a class="">@User.Identity.Name</a></li>
            <li>
                <form asp-controller="Account" asp-action="Logout" method="post" id="logoutFormMobile" style="margin-left:2.3rem;">
                    <button class="waves-effect waves-light btn" type="submit">Log out</button>
                </form>
            </li>
        }
    </ul>
    <script defer src="~/js/Navbar.js"></script>
}

